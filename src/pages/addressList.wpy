<style>
page{
  background-color: #f8f8f8;
}
.all {
  margin-bottom: 140rpx;
}
.wdd {
  width: 120px;
  height: 80rpx;
  line-height: 80rpx;
  font-size: 26rpx;
  text-align: center;
  color: #696969;
  position: fixed;
  bottom: 200rpx;
  left: 30%;
  background-color: #E5E5E5;
}
.address {
  font-size:24rpx;
  margin-top:20rpx;
  color:#333;
}
.noCommodity {
  color: #938f99;
  text-align: center;
  font-size: 28rpx;
  /* margin-top: 480rpx; */
}
.addressList{
  width: 750rpx;
  height: auto;
  min-height: 270rpx;
  padding-bottom: 30rpx;
}
.itemAddress{
  width: 690rpx;
  padding: 20rpx 30rpx;
  background-color: #fff;
  margin-bottom: 20rpx;
}
.itemAddress .name{
  overflow:hidden;
  text-overflow:ellipsis;
  white-space:nowrap;
}
.itemAddress .name icon{
  font-size: 30rpx;
}
.itemAddress .info view{
  /* margin: 0 30rpx; */
  width: 350rpx;
  overflow: hidden;
  white-space:nowrap;
  text-overflow:ellipsis;
}
.itemAddress .open{
  width: 690rpx;
  margin-top: 20rpx;
  border-top: 1rpx solid #e9e9e9;
  display: flex;
  align-items: center;
  justify-content: flex-end;
  height: 60rpx;
}
.itemAddress .open icon,
.itemAddress .open view{
  color: #959595;
  font-size: 25rpx;
}
.itemAddress .open view{
  width: 95rpx;
}
.name{
  width: 100%;
  height: 70rpx;
  line-height: 70rpx;
  color: #3a3a3a;
  font-size: 30rpx;
  overflow:hidden;
  text-overflow: ellipsis;
}
.itemAddress .name icon{
  font-size: 30rpx;
}
.itemAddress .info{
  padding-left: 30rpx;
  display: flex;
  align-items: center;
  justify-content: flex-start;
  color: #959595;
  font-size: 30rpx;
  
}
.moren{
  width: 140rpx !important;
}
.morenSel, .morenSel icon{
  color: #ca0c16 !important;
}
</style>
<template>
<!-- 收货地址列表页面 -->
  <view class="all">
    <!-- 地址显示列表 -->
    <repeat for="{{addressListData}}" item="item">
      <view class="itemAddress">
        <view class="name">
          <icon class="iconfont icon-location" />
          {{item.address}}
        </view>
        <view class="info">
          <view>姓名: {{item.people}}</view>
          <view>联系电话:{{item.mobile}}</view>
        </view>
        <view class="open">
          <view data-index="{{index}}" @tap="goNewAddress">
            <icon class="iconfont icon-bianji" />
            编辑
          </view>
          <view data-id="{{item.id}}" @tap="deleteList">
            <icon class="iconfont icon-shanchu" />
            删除
          </view>
          <view class="moren morenSel" data-id="{{item.id}}" @tap="defaultAddress">
            <icon class="iconfont icon-moren" />
            默认地址
          </view>
        </view>
      </view>
    </repeat>
    <view class="noCommodity" wx:if="{{ addressList.length==0 }}">
      <icon class="iconfont icon-kong"></icon>
      暂无收货地址
    </view>
    <!-- 新增地址按钮 -->
    <view @tap="goNewAddress">
      <view class='wdd'>+新建地址</view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy'
export default class AddressList extends wepy.page {
  // 页面配置
  config = {
    navigationBarTitleText: '地址列表'
  };
  // 生命组件ID
  components = {
    
  };
  data = {
    userInfo: new Object(), // 用户信息
    addressList: new Array() // 地址列表
  };
  methods = {
    bindViewTap() {
      console.log('button clicked')
    },
    // 新建地址
    goNewAddress() {
      this.$navigate(`/pages/newAddress`)
    }
  }

  onLoad(options) {
    // 获取保存在全局的用户信息
    this.userInfo = this.$parent.globalData.userInfo
    this.getAddressList()
  }
  getAddressList() {
    this.addressListData = [
      {
        'id': '1',
        'address': '软件新城1',
        'people': '二狗子1',
        'mobile': '18888888888',
      },
      {
        'id': '1',
        'address': '软件新城2',
        'people': '二狗子2',
        'mobile': '18888888888',
      },
      {
        'id': '1',
        'address': '软件新城3',
        'people': '二狗子3',
        'mobile': '18888888888',
      }
    ]
    this.$apply()
  }
  // // 删除地址
  // deleteList(e) {
  //   var id = e.currentTarget.dataset.id
  //   var that = this
  //   wx.showModal({
  //     title: '提示',
  //     content: '您确定要删除这条地址吗？',
  //     success: function(res) {
  //       if (res.confirm) {
  //         wx.request({
  //           url: `${that.$parent.globalData.requestUrl}/deleteShipment/${id}`,
  //           method: 'DELETE',
  //           header: {
  //             AuthrizeOpenId: that.$parent.globalData.open_id
  //           },
  //           success: data => {
  //             if (data.data.success) {
  //               wx.showToast({
  //                 title: '删除地址成功',
  //                 duration: 2000,
  //                 mask: true,
  //                 icon: 'success'
  //               })
  //               that.getShipmentList()
  //             } else {
  //               wx.showModal({
  //                 title: '',
  //                 content: data.data.errmsg
  //               })
  //             }
  //           }
  //         })
  //       } else if (res.cancel) {}
  //     }
  //   })
  // }

  // // 默认收货地址
  // defaultAddress(e) {
  //   var id = e.currentTarget.dataset.id
  //   // console.log(id)
  //   wx.request({
  //     url: `${this.$parent.globalData.requestUrl}/setDefaultShipment/${id}`,
  //     method: 'PUT',
  //     header: {
  //       AuthrizeOpenId: this.$parent.globalData.open_id
  //     },
  //     success: data => {
  //       if (data.data.success) {
  //         wx.showToast({
  //           title: '设置默认地址成功',
  //           duration: 2000,
  //           mask: true,
  //           icon: 'success'
  //         })
  //         this.getShipmentList()
  //       } else {
  //         wx.showModal({
  //           title: '',
  //           content: data.data.errmsg
  //         })
  //       }
  //     }
  //   })
  // }
  // async onReachBottom() {
  //   await wx.request({
  //     url: this.getUrl,
  //     method: 'GET',
  //     header: {
  //       AuthrizeOpenId: this.$parent.globalData.open_id
  //     },
  //     success: data => {
  //       if (data.statusCode === 200) {
  //         let addressList = data.data.data.user_shipments.data
  //         // 将新的请求结果加入原有数组  concat连接两个或更多的数组，并返回结果。
  //         this.addressList = this.addressList.concat(addressList)
  //         // 更新下一页请求地址
  //         this.getUrl = data.data.data.orders.data.meta.pagination.links.next
  //       }
  //     }
  //   })
  // };
  // getShipmentList() {
  //   wepy.login().then(res => {
  //     wx.request({
  //       url: `${this.$parent.globalData.requestUrl}/shipmentList`,
  //       method: 'GET',
  //       header: {
  //         AuthrizeOpenId: this.$parent.globalData.open_id
  //       },
  //       success: data => {
  //         if (data.data.success) {
  //           data = data.data.data.user_shipments
  //           this.addressList = data.data
  //           this.$apply()
  //           this.getUrl = data.data.data.orders.meta.pagination.links.next
  //           this.indexs = data.data.data.orders.meta.pagination.current_page
  //         } else {
  //           wx.showModal({
  //             title: '',
  //             content: data.data.errmsg
  //           })
  //         }
  //       }
  //     })
  //   })
  // }

}
</script>